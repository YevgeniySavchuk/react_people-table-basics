{"version":3,"sources":["components/Header/Header.tsx","App.tsx","components/NotFoundPage/NotFoundPage.tsx","components/TableHeadFoot/TableHeadFoot.tsx","api/getPeople.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/HomePage/HomePage.tsx","index.tsx"],"names":["Header","className","App","to","NotFoundPage","TableHeadFoot","people","setPeople","active","setActive","useState","sortName","sortSex","sortBorn","sortDied","sortFather","sortMother","state","setState","nameActive","sexActive","bornActive","diedActive","fatherActive","motherActive","handlerOnClick","text","sortedPeople","sort","a","b","name","localeCompare","sex","fatherName","motherName","born","died","classNames","onClick","currentTarget","textContent","getPeople","fetch","response","ok","json","Error","PersonRow","searchParams","slug","useParams","filter","person","get","toLowerCase","father","mother","startsWith","map","style","color","id","PeopleTable","useSearchParams","setSearchParams","useEffect","then","result","updatedPeopleList","index","find","man","woman","type","placeholder","value","onChange","event","target","HomePage","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.284aec98.chunk.js","sourcesContent":["export const Header: React.FC = () => (\n  <h1 className=\"title has-text-centered\">\n    People table\n  </h1>\n);\n","import './App.scss';\nimport 'bulma';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Header } from './components/Header/Header';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <nav className=\"has-text-centered my-5\">\n        <div>\n          <Link\n            className=\"button is-primary mx-6\"\n            to=\"/home\"\n          >\n            Home page\n          </Link>\n          <Link\n            className=\"button is-primary mx-6\"\n            to=\"people\"\n          >\n            People Page\n          </Link>\n        </div>\n      </nav>\n      <Outlet />\n    </>\n  );\n};\n\nexport default App;\n","export const NotFoundPage: React.FC = () => {\n  return <h1 className=\"has-text-centered\">Page not found</h1>;\n};\n","import classNames from 'classnames';\nimport { useState } from 'react';\nimport { Active } from '../../types/Active';\nimport { UpdatedPersone } from '../../types/UpdatedPersone';\n\ninterface Props {\n  people: UpdatedPersone[],\n  setPeople: (people: UpdatedPersone[]) => void,\n  active: Active,\n  setActive: (value: Active) => void,\n}\n\nexport const TableHeadFoot: React.FC<Props> = ({\n  people,\n  setPeople,\n  active,\n  setActive,\n}) => {\n  const [state, setState] = useState({\n    sortName: true,\n    sortSex: true,\n    sortBorn: true,\n    sortDied: true,\n    sortFather: true,\n    sortMother: true,\n  });\n\n  const {\n    nameActive,\n    sexActive,\n    bornActive,\n    diedActive,\n    fatherActive,\n    motherActive,\n  } = active;\n\n  const handlerOnClick = (\n    text: string | null,\n  ) => {\n    const {\n      sortName,\n      sortSex,\n      sortBorn,\n      sortDied,\n      sortFather,\n      sortMother,\n    } = state;\n\n    if (text === 'Name') {\n      const sortedPeople = [...people].sort((a, b) => {\n        return sortName\n          ? a.name.localeCompare(b.name)\n          : b.name.localeCompare(a.name);\n      });\n\n      setState({\n        sortName: !sortName,\n        sortBorn: true,\n        sortDied: true,\n        sortSex: true,\n        sortFather: true,\n        sortMother: true,\n      });\n\n      setActive({\n        nameActive: true,\n        sexActive: false,\n        bornActive: false,\n        diedActive: false,\n        fatherActive: false,\n        motherActive: false,\n      });\n\n      setPeople(sortedPeople);\n    }\n\n    if (text === 'Sex') {\n      const sortedPeople = [...people].sort((a, b) => {\n        return sortSex\n          ? a.sex.localeCompare(b.sex)\n          : b.sex.localeCompare(a.sex);\n      });\n\n      setState({\n        sortSex: !sortSex,\n        sortName: true,\n        sortBorn: true,\n        sortDied: true,\n        sortFather: true,\n        sortMother: true,\n      });\n\n      setActive({\n        nameActive: false,\n        sexActive: true,\n        bornActive: false,\n        diedActive: false,\n        fatherActive: false,\n        motherActive: false,\n      });\n\n      setPeople(sortedPeople);\n    }\n\n    if (text === 'Father') {\n      const sortedPeople = [...people].sort((a, b) => {\n        return sortFather\n          ? a.fatherName.localeCompare(b.fatherName)\n          : b.fatherName.localeCompare(a.fatherName);\n      });\n\n      setState({\n        sortFather: !sortFather,\n        sortSex: true,\n        sortName: true,\n        sortBorn: true,\n        sortDied: true,\n        sortMother: true,\n      });\n\n      setActive({\n        nameActive: false,\n        sexActive: false,\n        bornActive: false,\n        diedActive: false,\n        fatherActive: true,\n        motherActive: false,\n      });\n\n      setPeople(sortedPeople);\n    }\n\n    if (text === 'Mother') {\n      const sortedPeople = [...people].sort((a, b) => {\n        return sortMother\n          ? a.motherName.localeCompare(b.motherName)\n          : b.motherName.localeCompare(a.motherName);\n      });\n\n      setState({\n        sortMother: !sortMother,\n        sortFather: true,\n        sortSex: true,\n        sortName: true,\n        sortBorn: true,\n        sortDied: true,\n      });\n\n      setActive({\n        nameActive: false,\n        sexActive: false,\n        bornActive: false,\n        diedActive: false,\n        fatherActive: false,\n        motherActive: true,\n      });\n\n      setPeople(sortedPeople);\n    }\n\n    if (text === 'Born') {\n      const sortedPeople = [...people].sort((a, b) => {\n        return sortBorn\n          ? a.born - b.born\n          : b.born - a.born;\n      });\n\n      setState({\n        sortBorn: !sortBorn,\n        sortMother: true,\n        sortFather: true,\n        sortSex: true,\n        sortName: true,\n        sortDied: true,\n      });\n\n      setActive({\n        nameActive: false,\n        sexActive: false,\n        bornActive: true,\n        diedActive: false,\n        fatherActive: false,\n        motherActive: false,\n      });\n\n      setPeople(sortedPeople);\n    }\n\n    if (text === 'Died') {\n      const sortedPeople = [...people].sort((a, b) => {\n        return sortDied\n          ? a.died - b.died\n          : b.died - a.died;\n      });\n\n      setState({\n        sortDied: !sortDied,\n        sortBorn: true,\n        sortMother: true,\n        sortFather: true,\n        sortSex: true,\n        sortName: true,\n      });\n\n      setActive({\n        nameActive: false,\n        sexActive: false,\n        bornActive: false,\n        diedActive: true,\n        fatherActive: false,\n        motherActive: false,\n      });\n\n      setPeople(sortedPeople);\n    }\n  };\n\n  return (\n    <tr>\n      <th\n        className={classNames({ 'is-selected': nameActive })}\n        onClick={({ currentTarget }) => handlerOnClick(\n          currentTarget.textContent,\n        )}\n      >\n        Name\n      </th>\n      <th\n        className={classNames({ 'is-selected': sexActive })}\n        onClick={({ currentTarget }) => handlerOnClick(\n          currentTarget.textContent,\n        )}\n      >\n        Sex\n      </th>\n      <th\n        className={classNames({ 'is-selected': bornActive })}\n        onClick={({ currentTarget }) => handlerOnClick(\n          currentTarget.textContent,\n        )}\n      >\n        Born\n      </th>\n      <th\n        className={classNames({ 'is-selected': diedActive })}\n        onClick={({ currentTarget }) => handlerOnClick(\n          currentTarget.textContent,\n        )}\n      >\n        Died\n      </th>\n      <th\n        className={classNames({ 'is-selected': fatherActive })}\n        onClick={({ currentTarget }) => handlerOnClick(\n          currentTarget.textContent,\n        )}\n      >\n        Father\n      </th>\n      <th\n        className={classNames({ 'is-selected': motherActive })}\n        onClick={({ currentTarget }) => handlerOnClick(\n          currentTarget.textContent,\n        )}\n      >\n        Mother\n      </th>\n    </tr>\n  );\n};\n","import { Persone } from '../types/Persone';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_people-table/api';\n\nexport const getPeople = async (): Promise<Persone[]> => {\n  const response = await fetch(`${BASE_URL}/people.json`);\n\n  try {\n    if (response.ok) {\n      return await response.json();\n    }\n\n    throw new Error('error');\n  } catch {\n    throw new Error('error');\n  }\n};\n","import { NavLink, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { UpdatedPersone } from '../../types/UpdatedPersone';\nimport { Active } from '../../types/Active';\n\ninterface Props {\n  people: UpdatedPersone[],\n  active: Active,\n  searchParams: URLSearchParams,\n}\n\nexport const PersonRow: React.FC<Props> = ({\n  people,\n  active,\n  searchParams,\n}) => {\n  const {\n    nameActive,\n    sexActive,\n    bornActive,\n    diedActive,\n    fatherActive,\n    motherActive,\n  } = active;\n\n  const { slug } = useParams();\n\n  return (\n    <>\n      {people\n        .filter(person => {\n          let filter = searchParams.get('filter');\n\n          if (!filter) {\n            return true;\n          }\n\n          const name = person.name.toLowerCase();\n\n          filter = filter.toLowerCase();\n          const father = person.fatherName.toLowerCase();\n          const mother = person.motherName.toLowerCase();\n\n          return name.startsWith(filter.toLowerCase())\n            || (person.fatherName && father.startsWith(filter))\n            || (person.motherName && mother.startsWith(filter));\n        })\n        .map(person => (\n          <tr\n            className={classNames({\n              'is-selected': person.slug === slug,\n            })}\n            key={person.id}\n          >\n            <td className={classNames({ 'is-selected': nameActive })}>\n              {person.slug\n                ? (\n                  <NavLink\n                    to={person.slug}\n                    style={{ color: `${person.sex === 'm' ? 'blue' : 'red'}` }}\n                  >\n                    {person.name}\n                  </NavLink>\n                )\n                : person.name}\n            </td>\n            <td className={classNames({ 'is-selected': sexActive })}>\n              {person.sex}\n            </td>\n            <td className={classNames({ 'is-selected': bornActive })}>\n              {person.born}\n            </td>\n            <td className={classNames({ 'is-selected': diedActive })}>\n              {person.died}\n            </td>\n            <td className={classNames({ 'is-selected': fatherActive })}>\n              {person.father\n                ? (\n                  <NavLink\n                    to={person.father?.slug}\n                    style={{ color: 'blue' }}\n                  >\n                    {person.fatherName}\n                  </NavLink>\n                )\n                : person.fatherName || '--not found--'}\n            </td>\n            <td className={classNames({ 'is-selected': motherActive })}>\n              {person.mother\n                ? (\n                  <NavLink\n                    to={person.mother?.slug}\n                    style={{ color: 'red' }}\n                  >\n                    {person.motherName}\n                  </NavLink>\n                )\n                : person.motherName || '--not found--'}\n            </td>\n          </tr>\n        ))}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { TableHeadFoot } from '../TableHeadFoot/TableHeadFoot';\nimport { UpdatedPersone } from '../../types/UpdatedPersone';\nimport { getPeople } from '../../api/getPeople';\nimport { Persone } from '../../types/Persone';\nimport { PersonRow } from '../PersonRow/PersonRow';\nimport { Active } from '../../types/Active';\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState<UpdatedPersone[]>([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [active, setActive] = useState<Active>({\n    nameActive: false,\n    sexActive: false,\n    bornActive: false,\n    diedActive: false,\n    fatherActive: false,\n    motherActive: false,\n  });\n\n  useEffect(() => {\n    getPeople()\n      .then(result => {\n        const updatedPeopleList = result\n          .map((\n            person: Persone,\n            index: number,\n          ) => {\n            return {\n              ...person,\n              fatherName: person.fatherName || '--not found--',\n              motherName: person.motherName || '--not found--',\n              id: index,\n              father: result.find(\n                (man: Persone) => person.fatherName === man.name,\n              ) || null,\n              mother: result.find(\n                (woman: Persone) => person.motherName === woman.name,\n              ) || null,\n            };\n          });\n\n        setPeople(updatedPeopleList);\n      });\n  }, []);\n\n  return (\n    <>\n      <h2 className=\"subtitle has-text-centered\">People page</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        className=\"input is-primary\"\n        value={searchParams.get('filter') || ''}\n        onChange={(event) => {\n          const filter = event.target.value;\n\n          if (filter) {\n            setSearchParams({ filter });\n          } else {\n            setSearchParams({});\n          }\n        }}\n      />\n      <table className=\"table is-bordered table is-fullwidth\">\n        <thead>\n          <TableHeadFoot\n            people={people}\n            setPeople={setPeople}\n            active={active}\n            setActive={setActive}\n          />\n        </thead>\n        <tbody>\n          <PersonRow\n            people={people}\n            active={active}\n            searchParams={searchParams}\n          />\n        </tbody>\n        <tfoot>\n          <TableHeadFoot\n            people={people}\n            setPeople={setPeople}\n            active={active}\n            setActive={setActive}\n          />\n        </tfoot>\n      </table>\n    </>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h2 className=\"subtitle has-text-centered\">Home page</h2>\n);\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Outlet,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport App from './App';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { HomePage } from './components/HomePage/HomePage';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"home\" element={<HomePage />} />\n\n        <Route path=\"people\" element={<PeopleTable />}>\n          <Route path=\":slug\" element={<Outlet />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}